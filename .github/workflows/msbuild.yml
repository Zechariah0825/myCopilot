name: CMake + vcpkg Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg  # 指定 vcpkg 的路径

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest  # 使用 GitHub 提供的 Windows 最新环境

    steps:
    # Step 1: Checkout code
    - uses: actions/checkout@v4

    # Step 2: Clone vcpkg repository
    - name: Clone vcpkg repository
      run: |
        git clone https://github.com/microsoft/vcpkg.git ${VCPKG_ROOT}  # 克隆 vcpkg 仓库
        & "${VCPKG_ROOT}\\bootstrap-vcpkg.bat"  # 初始化 vcpkg

    # Step 3: Install dependencies using vcpkg
    - name: Install dependencies using vcpkg
      run: |
        & "${VCPKG_ROOT}\\vcpkg" install webview2 fmt simpleini  # 安装依赖库
        & "${VCPKG_ROOT}\\vcpkg" integrate install  # 集成 vcpkg

    # Step 4: Set up MSBuild with Visual Studio 16.9
    - name: Set up MSBuild with Visual Studio 16.9
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '16.0'

    # Step 5: Configure CMake
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -G "Visual Studio 16 2019" ..
        # 配置 CMake，指定 vcpkg 工具链文件，并选择 Visual Studio 2019 生成器

    # Step 6: Build project
    - name: Build project
      run: |
        cd build
        msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${env.SOLUTION_FILE_PATH}
